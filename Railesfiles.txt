Create new Project:
rails new proj_name –d mysql
Bundles and Gems:
gem install bundler
cd project_folder
bundle install 
GIT:
git init
git remote add origin (link to repo)
git add.
git remote rm origin (remove)
git add -A
git commit –m “start”
git push
Running a SQL server:
mysql-ctl start
mysql-ctl stop
creating root user
mysqladmin –u root password ‘_password_’   (admin creation)
or
mysql –u root -p (login)

then
https://docs.c9.io/docs/setting-up-mysql
go to config->database.yml and write username and password.

Accessing a Project:
run the server by rails s –b $IP –p $PORT
access it via URL
####################################

Controller,Model,View:
rails generate controller contr-name action-name (action name is optional and you can also give multiple actions).

Routes:
get “demo/index”  means
match “demo/index”,
	:to => “demo#index”,
	:via => :get
	Default route

General route:
match ‘controller(/:action(/:id)), :via => get

###########################
Embedding Ruby in erb:
<% code %> only executes the code
<%= code %> displays the result of code (ruby code)
URLs:
<a href=”/demo/hello”>Hello page </a>
or
<%= link_to(‘text’,{:controller=>”demo”,:action=>”hello”}) %>

#########################

Database:
1 table = 1 model
Model name singular, table name plural
4 mySQL commands
SHOW DATABASES;
CREATE DATABASE db_name; (written in yml file)
USE db_name;
DROP DATABASE db_name;
SHOW TABLES;
SHOW FIELDS FROM table_name;
Database Migration:
rails generate migration mgr_name (that could be anything)
Rake db:create
Rake db:migrate (every time you make some change, you need to run this.)
Creating new User for mySQL and giving permissions to access:
CREATE USER 'custom'@'localhost' IDENTIFIED BY 'password';
#GRANT ALL PRIVILIGES ON db_name.* TO 'custom'@'localhost';
GRANT ALL ON db_name.* TO 'custom'@'localhost' IDENTIFIED BY 'password';

SHOW GRANTS FOR ‘username’@’localhost’;
YML:
YML means this file is in YAML format 
YAML ain’t markup language;


1.	Rails generate model volunteers name:string etc (this will create a model and a migration)
2.	Rake db:migrate (table added to database)
3.	Rake db:rollback (table deleted from database)
4.	Manually create controller and views
5.	For one set of views, one controller
6.	Set routes. First function will be called in controller and then page code will run when we’ll type URL
7.	User.create(username: "databurj",password: "windows787!")

############################################

How to create a copy of project

1.	Clone github
2.	Bundle install
3.	Mysql-ctl start
4.	Mysqladmin –u root password ‘bharwa007’
5.	Mysql –u root –p
6.	Create database databurjproject_development (in SQL terminal)
7.	Rake db:migrate
8.	Rake db:seed
9.	Login to databurj using following credentials username: databurj password: windows787!


#############################################
git repo link: 
https://github.com/databurj/databurjgit

###############################################
stop server from everywhere: kill -INT $(cat tmp/pids/server.pid)


#############################################

To Do List:

Sohail:
if we need to add columns in database model, so do it now, and finalize it first
in 'add student' Name field should have length at least 3
phone number length must be 15 in bootstrap_form (because it is written in model validation)


Solved: flash notice fix krdo bhai (har page per 'flash notice' hona chaiye, ta ke late nazar na aye)
addition of fields in student table: secndry phone number, marks/percntge, monthly income
front-end of 'add instructor', 'add section', 'instructor_index'
pdf download and upload optional
student form editings:
1. tracking id uniquness validation removal
2. gender hona chahiye condition
3. phone number should be string
4. username should be unique
5. password should be visible
6. Add matric marks and percentage fields
7. change date of birth type to string
8. Add section field 

Owais:

Association of models
Fix routing of links like (show, edit)and enable all model validations (which should also be implemented in form)



Solved: instructors wala masla hal

Saqib:
the password field is not downloaded while downloading excel of instructors 
excel link in sections is not working
has_secure_password is written in seciton.rb also 
Uncomment timeout and login check on all pages  which you commented while writing test code
admin can only visit databurj.com/users, student can only visit databurj.com/users/student_index and instructor can only visit databurj.com/users/instructor_index
BDD and TDD


Later for Saqib:
If a user is logged in, he cannot see a login page (redirect to dashboard)
'add new element' forms must have good look

Solved: Student login, instructor login
Solved: excel download (data from tables of students)





Later To DO list:

1. implement each and every validation on input form. 
2. excel upload/download
3. filters on enteries


List before completing:
4. Our app will also work when following commands are  commented in routes.rb
resources 
